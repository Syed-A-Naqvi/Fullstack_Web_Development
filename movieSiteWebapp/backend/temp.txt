// Import the PostgreSQL client and dotenv package
import { Client } from 'pg';
import { config as dotenvConfig } from 'dotenv';

// Load environment variables from .env file
dotenvConfig();

// Database configuration using environment variables
const dbConfig = {
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
};

// Create a new PostgreSQL client
const client = new Client(dbConfig);

// Connect to the database
client.connect()
  .then(() => {
    console.log('Connected to PostgreSQL');

    // Perform database operations here

    // Example: Create a table
    const createTableQuery = `
      CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,
        username VARCHAR(255) NOT NULL,
        email VARCHAR(255) NOT NULL
      );
    `;

    client.query(createTableQuery)
      .then(res => {
        console.log('Table "users" created successfully');

        // Insert data into the table
        const insertQuery = `
          INSERT INTO users (username, email)
          VALUES ('john_doe', 'john@example.com');
        `;

        client.query(insertQuery)
          .then(res => {
            console.log('Data inserted successfully');

            // Query data from the table
            const selectQuery = 'SELECT * FROM users';

            client.query(selectQuery)
              .then(res => {
                console.log('Query result:');
                console.table(res.rows);

                // Close the database connection
                client.end();
              })
              .catch(err => {
                console.error('Error querying data:', err);
              });
          })
          .catch(err => {
            console.error('Error inserting data:', err);
          });
      })
      .catch(err => {
        console.error('Error creating table:', err);
      });
  })
  .catch(err => {
    console.error('Error connecting to PostgreSQL:', err);
  });
